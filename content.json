{"meta":{"title":"叶落薰风の理想乡","subtitle":"叶落薰风の理想乡","description":"理想乡|Java","author":"hainan","url":"http://yanghainan.org"},"pages":[{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-11-12T16:06:54.712Z","comments":false,"path":"client/index.html","permalink":"http://yanghainan.org/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-11-12T16:07:15.140Z","comments":true,"path":"comment/index.html","permalink":"http://yanghainan.org/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-12-03T01:24:02.668Z","comments":false,"path":"bangumi/index.html","permalink":"http://yanghainan.org/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-11-12T16:07:32.954Z","comments":false,"path":"lab/index.html","permalink":"http://yanghainan.org/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-11-12T16:04:53.098Z","comments":false,"path":"donate/index.html","permalink":"http://yanghainan.org/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-11-12T16:08:02.426Z","comments":false,"path":"music/index.html","permalink":"http://yanghainan.org/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-10-15T15:10:32.000Z","comments":true,"path":"rss/index.html","permalink":"http://yanghainan.org/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-10-15T15:10:32.000Z","comments":true,"path":"tags/index.html","permalink":"http://yanghainan.org/tags/index.html","excerpt":"","text":""},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-11-12T16:07:45.816Z","comments":true,"path":"links/index.html","permalink":"http://yanghainan.org/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-10-15T15:10:32.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://yanghainan.org/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-12-01T10:32:14.601Z","comments":false,"path":"about/index.html","permalink":"http://yanghainan.org/about/index.html","excerpt":"","text":"[理想乡の叶落薰风] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-10-15T15:10:32.000Z","comments":false,"path":"video/index.html","permalink":"http://yanghainan.org/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"冬至随想","slug":"冬至随想","date":"2019-12-22T15:18:49.000Z","updated":"2019-12-22T15:18:50.028Z","comments":true,"path":"2019/12/22/冬至随想/","link":"","permalink":"http://yanghainan.org/2019/12/22/冬至随想/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"http://yanghainan.org/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yanghainan.org/categories/技术/"}]},{"title":"MyBatis JdbcType对照表","slug":"MyBatis-JdbcType对照表","date":"2019-12-10T07:14:30.000Z","updated":"2019-12-10T07:30:23.967Z","comments":true,"path":"2019/12/10/MyBatis-JdbcType对照表/","link":"","permalink":"http://yanghainan.org/2019/12/10/MyBatis-JdbcType对照表/","excerpt":"","text":"一、JdbcType类型的作用在Mybatis明文建议在映射字段数据时需要将JdbcType属性加上，这样相对来说是比较安全的。 &lt;insert id=&quot;saveRole&quot;&gt; insert into role values ( #{roleId}, #{name}, #{remarks}, #{orderNo}, #{createBy,jdbcType=VARCHAR}, #{createDept,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=DATE} ) &lt;/insert&gt; 这样，保证了前四种是不能为空的前提下，而后面几项为空时也不至于程序报错。如果createBy为空，插入的时候mybatis不知道具体转换成什么jdbcType类型，通常会使用一个默认设置，虽然默认配置一般情况下不会出错，但是遇到个别情况还是会有问题的。Mybatis经常出现的：无效的列类型: 1111 错误，就是因为没有设置JdbcType造成的。 二、JdbcType对照表 JDBC Type Java Type CHAR String VARCHAR String LONGVARCHAR String NUMERIC java.math.BigDecimal DECIMAL java.math.BigDecimal BIT boolean BOOLEAN boolean TINYINT byte SMALLINT short INTEGER INTEGER BIGINT long REAL float FLOAT double DOUBLE double BINARY byte[] VARBINARY byte[] LONGVARBINARY byte[] DATE java.sql.Date TIME java.sql.Time TIMESTAMP java.sql.Timestamp CLOB Clob BLOB Blob ARRAY Array DISTINCT mapping of underlying type STRUCT Struct REF Ref DATALINK java.net.URL","categories":[{"name":"资料","slug":"资料","permalink":"http://yanghainan.org/categories/资料/"}],"tags":[{"name":"MyBatis","slug":"MyBatis","permalink":"http://yanghainan.org/tags/MyBatis/"}],"keywords":[{"name":"资料","slug":"资料","permalink":"http://yanghainan.org/categories/资料/"}]},{"title":"免费且好用的CDN：jsDelivr+Github 搭建使用方法","slug":"免费且好用的CDN：jsDelivr-Github-搭建使用方法","date":"2019-12-03T08:54:10.000Z","updated":"2019-12-04T12:30:29.316Z","comments":true,"path":"2019/12/03/免费且好用的CDN：jsDelivr-Github-搭建使用方法/","link":"","permalink":"http://yanghainan.org/2019/12/03/免费且好用的CDN：jsDelivr-Github-搭建使用方法/","excerpt":"","text":"[toc] 前言CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科本文是记录一下如何使用一个免费且好用的CDN–jsDelivr + Github 内容一、新建Github仓库注：（README为自述文件，可根据自身需求选择是否创建） 二、克隆Github仓库到本地点击 Clone or download，一键复制仓库地址在本地目录右键 Git Bash Here，执行以下命令： git clone 一键复制的仓库地址 三、上传资源复制需要上传的资源到本地git仓库（注：jsDelivr不支持加载超过20M的资源），在本地git仓库目录下右键 Git Bash Here，执行以下命令： git status //查看状态 git add . //添加所有文件到暂存区 git commit -m &#39;第一次提交&#39; //把文件提交到仓库 git push //推送至远程仓库 四、发布仓库点击release发布（似乎每次更新都得发布一次？） 五、通过jsDelivr引用资源使用方法：https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径例如： https://cdn.jsdelivr.net/gh/hainan13511/MyCDN@1.0/images/trhx.pnghttps://cdn.jsdelivr.net/gh/hainan13511/MyCDN@1.2.2/css/style.csshttps://cdn.jsdelivr.net/gh/hainan13511/cdn@3.1.3//The%20Pet%20Girl%20of%20Sakurasou.mp4注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下： // 加载任何Github发布、提交或分支https://cdn.jsdelivr.net/gh/user/repo@version/file // 加载 jQuery v3.2.1https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js // 使用版本范围而不是特定版本https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.jshttps://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js // 完全省略该版本以获取最新版本https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js // 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将会自动生成https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js // 在末尾添加 / 以获取资源目录列表https://cdn.jsdelivr.net/gh/jquery/jquery/ 另：jsdelivr单个文件不超过20M,整个仓库不能超过50M.","categories":[{"name":"技术","slug":"技术","permalink":"http://yanghainan.org/categories/技术/"}],"tags":[{"name":"CDN","slug":"CDN","permalink":"http://yanghainan.org/tags/CDN/"},{"name":"GitHub","slug":"GitHub","permalink":"http://yanghainan.org/tags/GitHub/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yanghainan.org/categories/技术/"}]},{"title":"Eclipse快捷键大全","slug":"Eclipse快捷键大全","date":"2019-12-01T06:22:00.000Z","updated":"2019-12-10T08:44:48.402Z","comments":true,"path":"2019/12/01/Eclipse快捷键大全/","link":"","permalink":"http://yanghainan.org/2019/12/01/Eclipse快捷键大全/","excerpt":"","text":"前言由于公司开发用的是eclipse，所以做一个关于eclipse快捷键的一些收集整理。 内容一、常用快捷键1. ctrl+shift+r：打开资源这组快捷键可以让你打开你的工作区中任何一个文件（不只是用来寻找Java文件），而你只需要按下文件名或mask名中的前几个字母，比如applic*.xml。小提示：利用Navigator视图的黄色双向箭头按钮让你的编辑窗口和导航器相关联。这会让你打开的文件对应显示在导航器的层级结构中，这样便于组织信息。如果这影响了速度，就关掉它。 2. ctrl+o：快速outline 如果想要查看当前类的方法或某个特定方法，但又不想把代码拉上拉下，也不想使用查找功能的话，就用ctrl+o吧。它可以列出当前类中的所有方法及属性，你只需输入你想要查询的方法名，点击enter就能够直接跳转至你想去的位置。 3. ctrl+e：快速转换编辑器 这组快捷键将帮助你在打开的编辑器之间浏览。使用ctrl+page down或ctrl+page up可以浏览前后的选项卡，但是在很多文件打开的状态下，ctrl+e会更加有效率。 4. ctrl+2，L：为本地变量赋值 开发过程中，我常常先编写方法，如Calendar.getInstance()，然后通过ctrl+2快捷键将方法的计算结果赋值于一个本地变量之上。 这样我节省了输入类名，变量名以及导入声明的时间。Ctrl+F的效果类似，不过效果是把方法的计算结果赋值于类中的域。 5. alt+shift+r：重命名 重命名属性及方法在几年前还是个很麻烦的事，需要大量使用搜索及替换，以至于代码变得零零散散的。今天的Java IDE提供源码处理功能，Eclipse也是一样。现在，变量和方法的重命名变得十分简单，你会习惯于在每次出现更好替代名称的时候都做一次重命名。要使 用这个功能，将鼠标移动至属性名或方法名上，按下alt+shift+r，输入新名称并点击回车。就此完成。如果你重命名的是类中的一个属性，你可以点击alt+shift+r两次，这会呼叫出源码处理对话框，可以实现get及set方法的自动重命名。 6. alt+shift+l以及alt+shift+m：提取本地变量及方法 源码处理还包括从大块的代码中提取变量和方法的功能。比如，要从一个string创建一个常量，那么就选定文本并按下alt+shift+l即可。如果同 一个string在同一类中的别处出现，它会被自动替换。方法提取也是个非常方便的功能。将大方法分解成较小的、充分定义的方法会极大的减少复杂度，并提 升代码的可测试性。 7. shift+enter及ctrl+shift+enter Shift+enter在当前行之下创建一个空白行，与光标是否在行末无关。Ctrl+shift+enter则在当前行之前插入空白行。 8. Alt+方向键 这也是个节省时间的法宝。这个组合将当前行的内容往上或下移动。在try/catch部分，这个快捷方式尤其好使。 9. ctrl+m 大显示屏幕能够提高工作效率是大家都知道的。Ctrl+m是编辑器窗口最大化的快捷键。 10. ctrl+.及ctrl+1：下一个错误及快速修改 ctrl+.将光标移动至当前文件中的下一个报错处或警告处。这组快捷键我一般与ctrl+1一并使用，即修改建议的快捷键。新版Eclipse的修改建 议做的很不错，可以帮你解决很多问题，如方法中的缺失参数，throw/catch exception，未执行的方法等等。 11. Control-Shift-T 打开类型（Open type）。如果你不是有意磨洋工，还是忘记通过源码树（source tree）打开的方式吧。用eclipse很容易打开接口的实现类的，按ctrl+t会列出接口的实现类列表。 12. F3: 打开申明（Open declaration） 或者，利用Declaration Tab（在Java视图模式下，选择Windows –&gt; Show View – &gt; Declaration）。当你选中代码中的一个方法，然后按这个按键，它会把整个方法在申明方框里显示出来。 13. Alt-down arrow 将一行或多行向下移动。Alt-up arrow会向上移动。 14. Alt-left arrow 在导航历史记录（Navigation History）中后退。就像Web浏览器的后退按钮一样，在利用F3跳转之后，特别有用。（用来返回原先编译的地方） 15. Alt-right arrow 导航历史记录中向前。 16. Control-Q 回到最后一次编辑的地方。这个快捷键也是当你在代码中跳转后用的。特别是当你钻的过深，忘记你最初在做什么的时候。 17. Control-Shift-G 在workspace中搜索引用（reference）。这 是重构的前提。对于方法，这个热键的作用和F3恰好相反。它使你在方法的栈中，向上找出一个方法的所有调用者。一个与此相关的功能是开启“标记”功能 （occurrence marking） 。选择Windows-&gt;Preferences-&gt;Java-&gt; Editor-&gt; Mark Occurrences，勾选选项。这时，当你单击一个元素的时候，代码中所有该元素存在的地方都会被高亮显示。我个人只使用“标记本地变量”（Mark Local Variables）。注意：太多的高亮显示会拖慢Eclipse。 18. Control-Shift-F CodeàJavaàPreferencesà根据代码风格设定重新格式化代码。 19. Control-/ 对一行注释或取消注释。对于多行也同样适用。 20. Control-Alt-down arrow 复制高亮显示的一行或多行。 二、其他快捷键其他的热键在菜单里有。你可以通过按下Control-Shift-L（从3.1版本开始）， 看到所有快捷键的列表。按下Control-Shift-L两次，会显示热键对话框（Keys Preferences dialog），你可以在这里自己设置热键。 Ctrl+1 快速修复(最经典的快捷键,就不用多说了) Ctrl+D: 删除当前行 Ctrl+Alt+↓ 复制当前行到下一行(复制增加) Ctrl+Alt+↑ 复制当前行到上一行(复制增加) Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了) Alt+↑ 当前行和上面一行交互位置(同上) Alt+← 前一个编辑的页面 Alt+→ 下一个编辑的页面(当然是针对上面那条来说了) Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性 Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后) Shift+Ctrl+Enter 在当前行插入空行(原理同上条) Ctrl+Q 定位到最后编辑的地方 Ctrl+L 定位在某行 (对于程序超过100的人就有福音了) Ctrl+M 最大化当前的Edit或View (再按则反之) Ctrl+/ 注释当前行,再按则取消注释 Ctrl+O 快速显示 OutLine Ctrl+T 快速显示当前类的继承结构 Ctrl+W 关闭当前Editer Ctrl+K 参照选中的Word快速定位到下一个 Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示) Ctrl+/(小键盘) 折叠当前类中的所有代码 Ctrl+×(小键盘) 展开当前类中的所有代码 Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替) Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作) Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了) Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查) Ctrl+Shift+F4 关闭所有打开的Editer Ctrl+Shift+X 把当前选中的文本全部变为大写 Ctrl+Shift+Y 把当前选中的文本全部变为小写 Ctrl+Shift+F 格式化当前代码 Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之) 下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了) Alt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力) Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用) Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定) Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候) Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能) Alt+Shift+I 合并变量(可能这样说有点不妥Inline) Alt+Shift+V 移动函数和变量(不怎么常用) Alt+Shift+Z 重构的后悔药(Undo) 三、其他的Eclipse窍门锁定命令行窗口：在命令行视图中（Window -&gt;Show View -&gt;Other -&gt;Basic -&gt;Console），试试看用滚动锁定按钮来锁定控制台输出不要滚屏。 使用Ant视图： 在我的Java或Debug模式下，我喜欢显示出Ant视图，这样我就可以迅速的运行Ant任务。通过Window Ant可以找到该视图。把Ant视图放在屏幕的一角， 通过“添加编译文件（Addà Other à Show View à Buildfiles）”按钮来添加build.xml文件。在3.1版本中，甚至支持Ant调试脚本语言。 自动遍历一个集合：for + Control-Space: 如果你还不知道，那么你应该记住Control-Space是自动完成功能。在Eclipse中，你还可以自动完成结构。在一个数组或集合范围内，试试看 输入“for”然后按下Control-Space键。Eclipse会问你你想要遍历哪一个集合然后自动完成循环代码。 使用分级布局： 在包浏览视图（Package Explorer view）中默认的布局（扁平式）方式让我困惑，它把包的全名显示在导航树（navigation tree）中。我更喜欢我源码的包和文件系统视图，在Eclipse中叫做分级布局（Hierarchical Layout）。要切换到这种模式，点击包浏览视图中向下的按钮，选择布局（Layout），然后选择分级（Hierarchial）。 一次显示多个文件：你可以一次浏览多个文件。把不在激活状态的编辑窗口拖到激活窗口的底部或侧边的滚动条上，就可以打开该编辑窗口。这是我能描述该窍门的最好方式了。 同时打开两个Eclipse： 要将改动从一个CVS分支上合并到另外一个上，我喜欢通过同时打开两个工作目录（Workspace）不同Eclipse来实现。这样我可以通过比较 CVS上的最新版本看到所有的变化（右键单击工程，然后选择Compare Lastest from HEAD）然后把每一个变化都合并到另外一个CVS分支上。启动多个Eclipse的最简单的方法是利用Eclipseàwith Launcher。 Implementors插件：安装一个能够跳到一个接口的实现的插件。如果你是个dependency injection 粉丝，或者正在基于编写优良的接口工作，那么你需要一个这样的插件来加速代码导航。 你可以在SourceForge找到这个插件。 Eclipse 分屏显示同一个文件：某个类很大，可能有数千行。当你想要将类开头部分与中间或者靠后的部分进行对比时，请follow如下步骤:Window -&gt; Editor -&gt; Toggle Split Editor (Ctrl + _) 或者 Toggle Split Editor (Ctrl + {) 另一种方法 : 直接按快捷键 Ctrl + Shift + [(左右分屏) 或者 Ctrl + Shift + _(上下分屏) Ctrl+Shift+R设置过滤文件类型：Eclipse的Ctrl+Shift+R是经常使用的快捷操作，但是每次都会出现很多其他类型的文件，必然 .class、svn相关的文件，如何进行过滤呢？ 1.只需要去掉Show Drived Resources选项前面的钩即可。 2.右键项目，properties–&gt;Resource–&gt;Resource Filters 点击add，添加排除项： 可以选择是否区分大小写，以及是否是正则表达式。 同理，如果要排除src目录下的文件，只要在输入框中输入src即可。","categories":[{"name":"资料","slug":"资料","permalink":"http://yanghainan.org/categories/资料/"}],"tags":[{"name":"eclipse","slug":"eclipse","permalink":"http://yanghainan.org/tags/eclipse/"}],"keywords":[{"name":"资料","slug":"资料","permalink":"http://yanghainan.org/categories/资料/"}]},{"title":"在阿里云服务器上安装MySQL（CentOS7）","slug":"在阿里云服务器上安装MySQL（CentOS7）","date":"2019-11-22T04:02:26.000Z","updated":"2019-12-03T09:27:46.261Z","comments":true,"path":"2019/11/22/在阿里云服务器上安装MySQL（CentOS7）/","link":"","permalink":"http://yanghainan.org/2019/11/22/在阿里云服务器上安装MySQL（CentOS7）/","excerpt":"","text":"[TOC] 前言在window10上安装MySQL倒是很简单，下个安装包一路NEXT就行了，但是在服务器上安装时由于自己太过小白遇到了很多坑，现在记录下安装步骤，以后再次安装可以不必再踩坑了。 一、检查并且显示Apache相关安装包[root@localhost ~]## rpm -qa | grep mysql 二、删除MySql[root@localhost ~]## yum remove -y mysql mysql mysql-server mysql-libs compat-mysql51 或 [root@localhost ~]## rpm -e mysql-community-libs-5.7.20-1.el7.x86_64 --nodeps 或 [root@localhost ~]## yum -y remove mysql-community-libs-5.7.20-1.el7.x86_64 三、查看MySql相关文件[root@localhost ~]## find / -name mysql 四、安装MySql服务1.确保服务器系统处于最新状态（可选）[root@localhost ~]## yum -y update 如果显示以下内容说明已经更新完成 Replaced: grub2.x86_64 1:2.02-0.64.el7.centos grub2-tools.x86_64 1:2.02-0.64.el7.centos Complete! 2.重启服务器（可选）[root@localhost ~]## reboot 3.首先检查是否已经安装，如果已经安装先删除以前版本，以免安装不成功[root@localhost ~]## php -v 或 [root@localhost ~]## rpm -qa | grep mysql 或 [root@localhost ~]## yum list installed | grep mysql 如果显示以下内容说明没有安装服务 -bash: gerp: command not found 4.下载MySql安装包[root@localhost ~]## rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm 或 [root@localhost ~]## rpm -ivh &lt;http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm&gt; 5.安装MySql[root@localhost ~]## yum install -y mysql-server 或 [root@localhost ~]## yum install mysql-community-server 如果显示以下内容说明安装成功 Complete! 6.设置开机启动Mysql[root@localhost ~]## systemctl enable mysqld.service 7.检查是否已经安装了开机自动启动[root@localhost ~]## systemctl list-unit-files | grep mysqld 如果显示以下内容说明已经完成自动启动安装 mysqld.service enabled 8.设置开启服务[root@localhost ~]## systemctl start mysqld.service 9.查看MySql默认密码[root@localhost ~]## grep &#39;temporary password&#39; /var/log/mysqld.log 10.登陆MySql，输入用户名和密码[root@localhost ~]## mysql -uroot -p 11.修改当前用户密码mysql&gt;SET PASSWORD = PASSWORD(&#39;Abc123!_&#39;); 12.开启远程登录，授权root远程登录mysql&gt;GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;a123456!&#39; WITH GRANT OPTION; 13.命令立即执行生效mysql&gt;flush privileges; 五、补充 Mysql是为了安全考虑，初始的时候并没有开启Root用户的远程访问权限，Root只能本地localhost，127.0.0.1访问，但是我们操作起来实在是不方便，下面我们就使用Xshell连接Linux服务器操作Mysql给Root用户添加远程访问权限 1.我们先试用Xshell链接我们的远程Linux服务器 2、然后输入 -&gt; mysql -u root -p 回车会出现 Enter password:然后将我们的root用户密码输入进去再次回车; 别忘了要切换到mysql数据库 -&gt; use mysql 3、接下来我们可以查看一下现有用户及连接权限(注意操作MySQL的语句需要加’;’) -&gt; select user, password, host from user; mysql是为了安全考虑所以初始的时候远程是不能访问的，只能本地localhost，127.0.0.1访问。 4、下面我们就再添加一个root用户，密码暂时为空，允许任意Ip访问’%’ -&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;你的密码不能太简单&#39; WITH GRANT OPTION; 5、接下来我们修改一下root用户的密码 -&gt; update user set password=PASSWORD(&#39;123456&#39;) where user=&#39;root&#39;; 6、然后我们刷新一下mysql的权限 -&gt; flush privileges; 然后就大功告成了，远程任意ip都可以进行访问。 六、常用操作重启MySql服务[root@localhost ~]## service mysqld restart 查看MySql版本[root@localhost ~]## yum repolist all | grep mysql 查看当前的启动的 MySQL 版本[root@localhost ~]## yum repolist enabled | grep mysql 通过Yum来安装MySQL,会自动处理MySQL与其他组件的依赖关系[root@localhost ~]## yum install mysql-community-server 查看MySQL安装目录[root@localhost ~]## whereis mysql 启动MySQL服务[root@localhost ~]## systemctl start mysqld 查看MySQL服务状态[root@localhost ~]## systemctl status mysqld 关闭MySQL服务[root@localhost ~]## systemctl stop mysqld 测试MySQL是否安装成功[root@localhost ~]## mysql 查看MySql默认密码[root@localhost ~]## grep &#39;temporary password&#39; /var/log/mysqld.log 查看所有数据库mysql&gt;show databases; 退出登录数据库mysql&gt;exit; 查看所有数据库用户mysql&gt;SELECT DISTINCT CONCAT(&#39;User: &#39;&#39;&#39;,user,&#39;&#39;&#39;@&#39;&#39;&#39;,host,&#39;&#39;&#39;;&#39;) AS query FROM mysql.use","categories":[{"name":"技术","slug":"技术","permalink":"http://yanghainan.org/categories/技术/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yanghainan.org/tags/MySQL/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yanghainan.org/categories/技术/"}]},{"title":"关于Linux操作系统的一些常用命令整理(CentOS)","slug":"关于Linux操作系统的一些常用命令整理(CentOS)","date":"2019-11-20T14:16:01.000Z","updated":"2019-12-01T10:28:04.165Z","comments":true,"path":"2019/11/20/关于Linux操作系统的一些常用命令整理(CentOS)/","link":"","permalink":"http://yanghainan.org/2019/11/20/关于Linux操作系统的一些常用命令整理(CentOS)/","excerpt":"","text":"前言 最近刚买了台阿里云的服务器玩玩,一直需要百度Linux的一些命令,感觉很麻烦,现在收集整理起来,方便自己查看. 内容一、命令的基本格式命令 [选项] [参数] [root@localhost~] root为用户名 ～表示当前所在位置 localhost主机名 &#39;#&#39;超级用户 &#39;$&#39; 普通用户 二.查询目录的内容1.查看目录pwd 显示路径 ls [选项][文件或目录] 选项： -a 所有文件 -l 查看详情 #可以简写ll,一般都习惯用这个 -d查看目录属性 -h显示文件大小 2.查看文件内容 cat|head|tail命令 cat abc.txt #查看abc的内容 head -5 abc.txt #查看abc前5行内容。默认是10行 tail [选项] 文件名 各选项的含义如下： +num：从第num行以后开始显示 -num：从距文件尾num行处开始显示。如果省略num参数，系统默认值为10. -f: 循环读取,例如查看服务器日志时，可以实时观察 #filename 文件里的最尾部的内容显示在屏幕上，并且不断刷新。 tail -f filename #查看最后20行 tail -f filename more命令 more命令一次显示一屏信息，若信息未显示完屏幕底部将出现“-More-（xx%）”。 此时按Space键，可显示下一屏内容； 按“回车”键，显示下一行内容； 按B键，显示上一屏； 按Q键，可退出more命令。 less命令：和more命令类似，但是比more命令更强大。在很多时候，必须使用less,比如管道。例如 ll /etc | less #可以按Q返回 stat 命令：查看文件的详细信息，比如创建修改时间，大小等 [root@localhost zx]# stat index.html 文件：&quot;index.html&quot; 大小：29006 块：64 IO 块：4096 普通文件 设备：fd00h/64768d Inode：17589607 硬链接：1 权限：(0644/-rw-r--r--) Uid：( 0/ root) Gid：( 0/ root) 环境：unconfined_u:object_r:home_root_t:s0 最近访问：2019-09-02 21:47:41.824053666 +0800 最近更改：2019-09-02 21:44:33.588587500 +0800 最近改动：2019-09-02 21:44:33.588587500 +0800 创建时间：- 三、文件处理命令1、建立目录mkdir -p [目录名] -p表述递归建文件夹 举例： mkdir japan #新建一个目录japan mkdir -p japan/cangjk #在japan目录（如果没有就创建）下新建一个目录cangjk touch abc.sh #新建一个文件 2.切换目录cd [目录] 简化操作： cd~ 进入当前用户目录 cd- 上次目录 cd… 进入上一级目录 pwd查看当前目录所在位置 3.删除目录rmdir [目录] 删除所有文件 rm -rf [目录] 删除目录所有文件 4.复制目录cp[选项][原文件目录][目标目录] 选项： -a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。 -d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。 -f：覆盖已经存在的目标文件而不给出提示。 -i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答&quot;y&quot;时目标文件将被覆盖。 -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。 -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。 -l：不复制文件，只是生成链接文件。 举例 #将../html/index.html 复制到当前目录 cp ../html/index.html . #将../html/ 目录下的文件及子目录复制到当前的tt目录下，如果tt不存在，会自动创建 cp -r ../html/ tt/ #将文件file复制到目录/usr/men/tmp下，并改名为file1 cp file /usr/men/tmp/file1 #如果dir2目录已存在，则需要使用 cp -r dir1/. dir2 #如果这时使用cp -r dir1 dir2,则也会将dir1目录复制到dir2中，明显不符合要求。 ps:dir1、dir2改成对应的目录路径即可。 远程复制 #将当前目录下的test.txt复制到远程111.12机器的/zx目录下 scp test.txt root@192.168.111.12:/zx #将test.txt复制到远程用户的根目录，并命名为textA.txt scp test.txt root@192.168.111.12:testA.txt #也可以不指定用户，在后续提示中再输入，如下： scp test.txt 192.168.111.12:/zx #从远程复制到本地： -r用于递归整个目录 scp -r remote_user@remote_ip:remote_folder local_path 5.剪切、改名 剪切 mv[原文件目录][目标文件目录] #复制/zx/soft目录中的所有文件到当前目录 mv /zx/soft/* . #复制当前目录a.txt到当前的test目录下。 mv a.txt ./test/a.txt #复制文件夹到/tmp/下，必须保证tmp是存在的文件夹 mv /zx/soft/ /tmp/soft 改名 #将目录(文件)A重命名为B mv A B #将/a目录(文件)移动到/b下，并重命名为c。要保证b目录存在。 mv /a /b/c #将当前test1目录移动到当前的test目录并命名为b mv ./test1 ./test/b 6.ln、file和touch命令 ln命令 用于创建链接文件，包括硬链接（Hard Link）和符号链接（Symbolic Link） 。我们常用的是符号链接，也称软连接。软连接就类似windows里的快捷方式。 示例： #在当前目录创建一个软连接，指向/etc/fastab，名称也是fastab ln -s /etc/fastab #在当前目录创建一个指向/boot/grub的软连接，命名为gb ln -s /boot/grub gb 注意：删除软连接 正确方式是： rm -rf ./gb 错误方式: rm -rf ./gb/ 这样会删除了原有grub下的内容。特别是针对系统文件的软连接，删除一定要慎重。 file命令 用于识别文件的类型，Linux中文件后缀只是方便使用者识别，没有实质的约束作用。file命令可以查看文件的实质类型： file [-bcLz] 文件|目录 #选项 文件|目录：需要识别的文件或目录 -b: 显示识别结果时，不显示文件名 -c: 显示执行过程 -L: 直接显示符号链接文件指向的文件类型 -z: 尝试去解读压缩文件的内容 示例：可以看出，index.mp4本质是一个HTML而非一个mp4文件 [root@VM_0_13_centos soft]# file index.mp4 index.mp4: HTML document, UTF-8 Unicode text, with very long lines touch命令 用于改变文件或目录的访问时间和修改时间。 touch [-am] [-t&lt;日期时间&gt;] [目录|文件] 如果指定目录文件不存在，则会直接创建一个空文件，所以touch也常用来创建一个空白文件 #创建一个新文件aa.txt touch aa.txt #选项说明： -a: 只修改访问时间 -m : 只修改 修改时间 -t : 使用指定日期时间，而非系统时间 。例如要修改为2019年10月20日16：38分13秒。参数就是：‘20191020163813’ 开始修改：将index.html文件的访问和修改时间修改成当前系统的时间。 touch index.html 7.常见目录作用/ 根目录 /bin 命令保存目录 /boot 启动目录 /dev 设备文件命令 /etc 配置文件保存目录 /home 家目录 /lib 系统库保存命令 /mnt 系统挂载目录 四、文件搜索命令1.locatelocate的查找速度非常快，因为该命令查找的是数据库，所以有些刚修改的文件和目录，可能无法找到。可以采用：updatedb 命令更新数据库。 locate [文件名] //在系统数据库中查找文件的新建的文件，要执行updatedb操作之后才能搜到 2.命令搜索whereis [选项] [命令名] #默认只会在指定目录查找（/bin ,/etc ,/usr) 或者 which [选项][命令名] #which命令只会在PATH环境变量定义的路径及命令别名中查找，所以范围有限。 选项： -b 只查找可执行文件 -m 只查找帮助文件 -u: 查找不包含指定类型的文件 -B&lt;目录&gt;： 只在指定目录下查找二进制文件 -M&lt;目录&gt;：只在指定目录查找帮助文件 -S&lt;目录&gt;：只在指定目录查找源码目录 3.文件搜索find [搜索范围][选项][条件] 几个常用选项： -size &lt;文件大小&gt;：查找符合指定大小的文件。文件大小单位可以是“c”表示Byte；“k”表示KB。如配置为“100k”，find命令会查找文件大小正好100KB的文件；配置为“+100k”，find命令会查找文件大小大于100KB的文件；配置为“-100k”，find命令会查找文件大小小于100KB的文件。 -user&lt;用户名称&gt;：查找所有者是指定用户的文件或目录，也能以用户编号指定 -name &lt;查找内容&gt;：查找指定的内容，在查找内容中使用“*” 表示任意个字符；使用“?”表示任何一个字符 -mtime &lt;24小时数&gt;：查找在指定时间曾更改过内容的文件或目录，单位以24小时计算。如配置为2，find命令会查找刚好在48小时之前更改过内容的文件；配置为+2，find命令会查找超过在48小时之前更改过内容的文件；配置为-2，find命令会查找在48小时之内更改过内容的文件。 -mmin &lt;分钟&gt;：查找在指定时间曾被更改过内容的文件或目录，单位以分钟计算。 -cmin &lt;分钟&gt;：查找在指定时间曾被更改过权限属性的文件或目录，单位以分钟计算。-ctime对应小时。 -amin &lt;分钟&gt;：查找的是指定时间访问过的文件或目录。-atim对应小时。 -perm &lt;权限数值&gt;：查找符合指定权限数值（有关权限数值见第6章）的文件或目录。如配置为“0700”，find命令会查找权限数值正好是“0700”的文件或目录；配置为“+0700”，find命令会查找权限数值大于 “0700”的文件或目录；配置为“-0700”，find 举例子： find / -name install.log 在根目录下查找名为install.log文件 find /root -inname install.log 忽略大小写查找文件 find /var/log -mtime +10 其中-mtime 文件修改时间 -atime 文件访问时间 -ctime 改变文件属性时间 +10 10天前 10 10天 -10 10天内 find /etc -size +20M 查找文件大于20M的文件 五、压缩与解压缩命令 常见压缩格式：.zip 、.gz 、 .bz2、.tar.gz 、.tar.bz2 #压缩文件 tar [压缩文件名][原文件] #压缩目录 tar -r [压缩文件名][原文件] 选项 -c: 建立压缩档案 -x：解压 -t：查看内容 -r：向压缩归档文件末尾追加文件 -u：更新原压缩包中的文件 这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。 -z：有gzip属性的 -j：有bz2属性的 -Z：有compress属性的 -v：显示所有过程 -O：将文件解开到标准输出 下面的参数-f是必须的 -f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。 举例子： #将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。 tar -cf all.tar *.jpg #列出all.tar包中所有文件，-t是列出文件的意思 tar -tf all.tar #解出all.tar包中所有文件，-x是解开的意思 tar -xf all.tar #将目录里所有jpg文件打包成jpg.tar tar –cvf jpg.tar *.jpg #解压到当前目录 tar -xzf nginx-1.14.0.tar.gz #解压到对应目录 tar -zxf nginx-1.14.0.tar.gz -C /usr/local/nginx #解压并显示过程 tar -zxvf nginx...tar.gz #注意：有些压缩程序提示命令找不到，需要进行安装，例如： yum install unzip 或在ubuntu上： apt-get install unzip 解压： 1、*.tar 用 tar –xvf 解压 2、*.gz 用 gzip -d或者gunzip 解压 3、*.tar.gz和*.tgz 用 tar –xzf 解压 4、*.bz2 用 bzip2 -d或者用bunzip2 解压 5、*.tar.bz2用tar –xjf 解压 6、*.Z 用 uncompress 解压 7、*.tar.Z 用tar –xZf 解压 8、*.rar 用 unrar e解压 9、*.zip 用 unzip 解压 #解压的时候，有时候不想覆盖已经存在的文件，那么可以加上-n参数 unzip -n test.zip unzip -n -d /temp test.zip #只看一下zip压缩包中包含哪些文件，不进行解压缩 unzip -l test.zip #查看显示的文件列表还包含压缩比率 unzip -v test.zip #检查zip文件是否损坏 unzip -t test.zip #如果已有相同的文件存在，要求unzip命令覆盖原先的文件 unzip -o test.zip -d /tmp/ 示例： unzip mydata.zip -d mydatabak #解压到mydatabak目录 10. xz 这是两层压缩，外面是xz压缩方式，里层是tar压缩,所以可以分两步实现解压 $xz -d node-v6.10.1-linux-x64.tar.xz $tar -xvf node-v6.10.1-linux-x64.tar 六、关机和重启shutdown [选项][时间] 选项： -c 取消前一个关机命令 -h 关机 -r 重启 init 6重启 init 0关机 logout退出登陆 七、查看用户信息w who last lastlog 八、shell基础1.什么是shellshell是命令行解释器。 2.echo 输出命令echo[选项][输出内容] 选项： -e:支持转义 ３.创建一个脚本创建hello.sh vim hello.sh 进入编辑： # !/bin/bash # the first program echo &quot;hello world!&quot; 执行： chmod 755 hello.sh ./hello.sh 或者： bash hello.sh 九、历史命令history 查看历史命令 history [选项][历史保存文件] 选项： -c清空历史 -w把缓存中的历史写入历史命令保存文件 十、输出重定向命令&gt;文件 以覆盖的方式，把正确的命令输出到指定文件 命令&gt;&gt;文件 以追加的方式，把正确的命令输出到指定文件 错误命令 2&gt; 文件 以覆盖的方式把错误的命令覆盖到指定文件 错误命令 2&gt;&gt; 文件 以追击的方式把错误的命令覆盖到指定文件 命令&gt;&gt;文件 2&gt;&amp;1 同时追加正确命令和错误命令到 指定文件 命令&gt;&gt;文件1 2&gt;&gt;文件2 把正确的命令输出到文件1错误的文件2 举个例子: #/bin/bash while command do curl -d &quot;userid=123343,action=getuserinfo&quot; https://app.testasss.com.cn/ &gt;test.txt time=$(date) cat=$(cat test.txt |cut -d \\: -f 3|cut -d \\&quot; -f 2) echo &quot;$time $cat&quot; &gt;&gt;test.log sleep 15s done 十一、网络相关1.ifconfig查看ip 举个例子： ifconfig&gt;&gt; ip.log cat ip.log 2.查看网络状态netstat [选项] 选项： -t: 列出tcp 协议端口 -u: 列出upd协议端口 -n ip地址个端口号 -l 列出监听状态的 -a 所有 3.查看路由列表netstat -rn 或者 route -n 4.查看某域名与自己的电脑的网络状态ping www.baidu.com 十二、vi编辑器vi的升级版是vim,建议使用vim. 1.vim的操作模式commond mode 命令模式 inser tmode 编辑模式 lastline mode 底行模式 2.模式切换i 进入编辑模式 esc 进入命令行模式 3.命令模式vim [文件] 进入文件或者创建文件（文件不存在的情况下） vim + [文件名] 进入文件尾部 vim +/[字符串] [文件名] 光标定位到文件第一次出现该字符串的位置 4.底行模式:w 保存 :q 退出 :! 强制 :15 定位的第15行 /[字符串] 光标位置向后搜索该字符串 ?[字符串] 光标位置向前搜索该字符串 dd 删除光标所在行 ctr+f 向下翻页 ctr+b 向上翻页 十三、常用操作快捷键ctr+c 终止当前命令 ctr+l 清屏 相当于 clear ctr+a 光标移到行首 ctr+e 光标移到行尾 ctr+u 把光标所在位置删除到行首 ctr+z 把命令放入后台 ctr+r 在历史命令中搜索 十四、其他常用工具： Vmware 虚拟机 centos.iso centos系统镜像 ,绝大多数服务器是这个系统 SecureCRT 远程登陆工具 Xshell 远程登陆工具 Xftp copy文件工具 winscp copy文件工具 十五、du命令du命令是检查硬盘使用情况，统计文件或目录及子目录使用硬盘的空间大小。参数的不同组合，可以更快的提高工作效率，以下仅列出了经常使用到的参数，如需更详细的信息，请用man du命令来获得。1．命令格式du [选项][文件] 2．命令功能显示每个文件和目录的磁盘使用空间。 3．命令参数| 参数 | 说明 || —- | —- || -a | 显示所有目录或文件的大小 || -b | 以byte为单位，显示目录或文件的大小 || -c | 显示目录或文件的总和 || -k | 以KB为单位输出 || -m | 以MB为单位输出 || -s | 仅显示目录或文件的总计数值 || -h | 以K,M,G为单位，提高信息可读性 || -x | 跳过不同的文件系统目录 || -S | 显示目录的大小，但不含子目录大小 || -D | 显示指定符号链接的源文件大小 | 实例1：显示目录或者文件所占空间 [root@tonyx home]# du 4 ./tonyxu/.mozilla/plugins 4 ./tonyxu/.mozilla/extensions 12 ./tonyxu/.mozilla 4 ./tonyxu/.gnome2 40 ./tonyxu 44 . 说明： 只显示当前home目录及子目录的大小，最下面的44为当前目录总计数 实例2：显示指定文件所占空间 [root@tonyx etc]# du inittab 4 inittab 实例3：查看指定目录所占空间 [root@tonyx home]# du tonyxu 4 tonyxu/.mozilla/plugins 4 tonyxu/.mozilla/extensions 12 tonyxu/.mozilla 4 tonyxu/.gnome2 40 tonyxu 实例5：显示两个目录所占磁盘空间大小 [root@tonyx tmp]# du yum yum.bake 4 yum 8 yum.bake 实例6：var目录中的某个文件太大，就可以使用如下命令查看 [root@tonyx tonyxu]# du -s /var/*|sort -nr 468216 /var/cache 61260 /var/lib 1852 /var/log 1172 /var/www 160 /var/spool 148 /var/run 16 /var/tmp 16 /var/lock 8 /var/empty 8 /var/db 4 /var/yp 4 /var/preserve 4 /var/opt 4 /var/nis 4 /var/local 4 /var/gdm 4 /var/games 4 /var/crash 4 /var/account 0 /var/mail 说明： Sort -nr 从大到小排列倒叙排列，将占用磁盘空间最大的文件最先显示出来，即可及时处理。运维当中，非常重要的命令，需牢记","categories":[{"name":"资料","slug":"资料","permalink":"http://yanghainan.org/categories/资料/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yanghainan.org/tags/Linux/"}],"keywords":[{"name":"资料","slug":"资料","permalink":"http://yanghainan.org/categories/资料/"}]},{"title":"Hello My First Blog","slug":"Hello-My-First-Blog","date":"2019-11-16T11:43:13.000Z","updated":"2019-12-01T10:27:37.506Z","comments":true,"path":"2019/11/16/Hello-My-First-Blog/","link":"","permalink":"http://yanghainan.org/2019/11/16/Hello-My-First-Blog/","excerpt":"","text":"历经千辛万苦,总算完成博客的搭建了,谨以此做个纪念,整个博客基本都是照搬别人的,希望以后自己也能独立写出这样的网站,我真的是很喜欢这种技术的不断进步与网站开发搭建的这种过程啊!","categories":[{"name":"生活","slug":"生活","permalink":"http://yanghainan.org/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"http://yanghainan.org/categories/生活/"}]}]}